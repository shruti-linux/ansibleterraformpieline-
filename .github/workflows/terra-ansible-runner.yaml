name: Deploy CentOS 9 on GCP and Configure via Ansible

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted 

    env:
      TF_VAR_project_id: "ansi-465711"
      TF_VAR_credentials_file: "/home/shrutikulshreshta/terraform-ansible/sa.json"
      TF_VAR_public_key_path: "/home/shrutikulshreshta/.ssh/id_ed25519.pub"

    steps:
    
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          chmod 600 /home/shrutikulshreshta/.ssh/id_ed25519
          chmod 644 /home/shrutikulshreshta/.ssh/id_ed25519.pub

      - name: Create ansible.cfg with host_key_checking disabled
        run: |
          echo '[defaults]' > /home/shruti/ansible/ansible.cfg
          echo 'host_key_checking = False' >> /home/shrutikulshreshta/terraform-ansible/ansible.cfg

      - name: Install Terraform and Ansible on CentOS 9
        run: |
          # Enable required repos
          sudo dnf install -y dnf-plugins-core epel-release
      
          # Install Ansible from EPEL
          sudo dnf install -y ansible
      
          # Add HashiCorp repo and install Terraform
          #sudo dnf config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo
          #sudo dnf -y install terraform
      
          # Confirm versions
          terraform -version
          ansible --version

      - name: Terraform Init
        run: |
          cd terraform-ansible
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform-ansible
          terraform apply -auto-approve

      - name: Get Terraform output (IP)
        run: |
          cd terraform-ansible
          terraform output -raw instance_ip >ip.txt
          echo "" >> ip.txt  # add newline
          terraform output -raw instance_ip_s >> ip.txt
          #echo "" >> ip.txt  # optional: ensure trailing newline
      
      - name: Prepare Ansible inventory
        run: |
          cd terraform-ansible
          echo "[centos9]" > inventory
          if [ -s ip.txt ]; then
            while IFS= read -r ip; do
              echo "$ip ansible_user=devops ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3 ansible_become=true" >> inventory
            done < ip.txt
          else
            echo "ip.txt is empty!"
          fi
  
      - name: Wait up to 3 minutes for SSH
        run: |
          for ip in $(cat terraform-ansible/ip.txt); do
            echo "Waiting for SSH on $ip..."
            timeout=180
            waited=0
            until ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -q devops@$ip 'echo ok' 2>/dev/null; do
              sleep 5
              waited=$((waited + 5))
              echo "Still waiting for $ip... (${waited}s)"
              if [ $waited -ge $timeout ]; then
                echo "Timeout reached waiting for $ip"
                exit 1
              fi
            done
            echo "SSH is up on $ip"
          done
      
      - name: Run Ansible Playbook
        run: |
          cd terraform-ansible
          ansible-playbook -i inventory playbook.yaml
