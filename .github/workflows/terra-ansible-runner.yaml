name: Deploy CentOS 9 on GCP and Configure via Ansible

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: self-hosted

    env:
      TF_VAR_project_id:        "ansi-465711"
      TF_VAR_credentials_file:  "/home/shruti/ansi-terra/actions-runner/_work/ansibleterraformpieline-/ansibleterraformpieline-/terraform-ansible/sa.json"
      TF_VAR_public_key_path:   "/home/shruti/.ssh/id_rsa.pub"

    defaults:
      run:
        working-directory: /home/shruti/ansi-terra   # all steps use this folder

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create ansible.cfg with host_key_checking disabled
        run: |
          set -euo pipefail
          cat > ansible.cfg <<EOF
          [defaults]
          host_key_checking = False
          EOF

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Capture instance IP
        run: |
          set -euo pipefail
          terraform output -raw instance_ip > ip.txt
          [ -s ip.txt ] || { echo "No IP returned by Terraform"; exit 1; }

      - name: Build Ansible inventory
        run: |
          set -euo pipefail
          {
            echo "[centos9]"
            while IFS= read -r ip; do
              echo "$ip ansible_user=devops ansible_ssh_private_key_file=~/.ssh/id_rsa ansible_python_interpreter=/usr/bin/python3 ansible_become=true"
            done < ip.txt
          } > inventory

      - name: Wait up to 3 minutes for SSH
        run: |
          set -euo pipefail
          for ip in $(< ip.txt); do
            echo "Waiting for SSH on $ip â€¦"
            timeout=180 waited=0
            until ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa devops@$ip 'echo SSH OK'; do
              sleep 5
              waited=$((waited + 5))
              [ $waited -ge $timeout ] && { echo "Timeout waiting for $ip"; exit 1; }
            done
            echo "SSH ready on $ip"
          done

      - name: Run Ansible Playbook
        run: ansible-playbook -i inventory playbook.yaml
