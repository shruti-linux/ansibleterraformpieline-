name: Terraform and Ansible Deployment

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TF_VAR_project_id: "ansi-465711"
      TF_VAR_region: "us-central1"
      TF_VAR_zone: "us-central1-a"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Google Cloud credentials
        run: |
          echo '${{ secrets.GCP_CREDENTIALS }}' > /tmp/sa.json
          chmod 600 /tmp/sa.json

      - name: Setup SSH keys
        run: |
          echo '${{ secrets.SSH_PRIVATE_KEY }}' > /tmp/id_rsa
          echo '${{ secrets.SSH_PUBLIC_KEY }}' > /tmp/id_rsa.pub
          chmod 600 /tmp/id_rsa
          chmod 644 /tmp/id_rsa.pub

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.0"

      - name: Setup Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get Terraform output (IP)
        run: |
          terraform output -raw instance_ip > /tmp/ip.txt
          echo "Instance IP: $(cat /tmp/ip.txt)"

      - name: Prepare Ansible inventory
        run: |
          IP_ADDRESS=$(cat /tmp/ip.txt | tr -d '"' | xargs)
          echo "[gcp_instances]" > inventory.ini
          echo "$IP_ADDRESS ansible_user=devops ansible_ssh_private_key_file=/tmp/id_rsa ansible_python_interpreter=/usr/bin/python3" >> inventory.ini
          cat inventory.ini

      - name: Wait for SSH connection
        run: |
          IP_ADDRESS=$(cat /tmp/ip.txt | tr -d '"' | xargs)
          echo "Waiting for SSH on $IP_ADDRESS..."
          
          # Add host to known_hosts
          ssh-keyscan -H $IP_ADDRESS >> ~/.ssh/known_hosts 2>/dev/null
          
          # Wait for SSH connection
          for i in {1..30}; do
            if ssh -o BatchMode=yes -o ConnectTimeout=5 -i /tmp/id_rsa devops@$IP_ADDRESS "echo 'SSH connection successful'" 2>/dev/null; then
              echo "SSH is available on $IP_ADDRESS"
              break
            else
              echo "Attempt $i: SSH not ready yet, waiting 10 seconds..."
              sleep 10
            fi
            if [ $i -eq 30 ]; then
              echo "ERROR: SSH not available after 5 minutes"
              exit 1
            fi
          done

      - name: Run Ansible Playbook
        run: |
          export ANSIBLE_HOST_KEY_CHECKING=False
          ansible-playbook -i inventory.ini playbook.yaml -v

      - name: Terraform Output (for verification)
        run: |
          terraform output
